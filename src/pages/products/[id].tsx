import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import { logOut, useIsLoggedIn } from '../../helpers/auth'
import api from '../../helpers/api'
import { GetServerSideProps } from 'next'

type Product = {
  id: number;
  title: string;
  description: string;
  image: string;
  price: number;
  discount: number;
}

// This gets called on every request
export const getServerSideProps: GetServerSideProps = async (context) => {
  const params  = context.params
  let product = null
  if(params) {
    const {id} = params
    // Fetch data from external API
    const res = await api.get(`/products/${id}`)
    product = res.data.product;
  }

  // Pass data to the page via props
  return { props: { product } }
}

export default function Home(props: any) {
  const isLoggedIn: boolean = useIsLoggedIn();
  const product = props.product;

  const handleLogOut = () => {
    api.post('logout').then(res => logOut())
  }

  return (
    <div className="container mx-auto px-4 flex flex-col h-screen">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header>
        <Link href="/login">Login</Link>
        <Link href="/register">Register</Link>
        {isLoggedIn &&
          <button onClick={handleLogOut}>Log out</button>
        }
      </header>

      <main>
        <h1>Product</h1>

        {product ?
          <div className="p-10 grid grid-cols-1 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3 gap-5">
            <div key={product.id} className="rounded overflow-hidden shadow-lg p-card">
              <Image className="w-full" src={`http://localhost:8000/storage/${product.image}`} alt="Mountain" width={'100%'} height={'100%'} layout='responsive' />
              <div className="px-6 py-4">
                <h3 className="font-bold text-xl mb-2">{product.title}</h3>
                <p className="text-base">
                  {product.description.length > 250 ?
                    `${product.description.substring(0, 250)}...` : product.description
                  }
                </p>
              </div>
              <div className="px-6 pt-4 pb-2">
                <span className="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">#photography</span>
                <span className="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">#travel</span>
                <span className="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">#winter</span>
              </div>
            </div>
          </div>
          :
          <p>There is no such product</p>
        }


      </main>
    </div>
  )
}
