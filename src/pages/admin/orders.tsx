import Head from 'next/head'
import api from '../../helpers/api'
import { GetServerSideProps } from 'next'
import React from 'react'
import { Accordion, AccordionTab } from 'primereact/accordion';
import { CartProduct } from '../../types'
import Header from '../../components/header'

// This gets called on every request
export const getServerSideProps: GetServerSideProps = async (context) => {
  // Fetch data from external API
  try {
    const res = await api.get('admin/orders', {
      headers: context?.req?.headers?.cookie ? { cookie: context.req.headers.cookie } : undefined,
    })

    if (res.data.error) {
      return { redirect: { destination: '/', permanent: false } }
    }

    const orders = res.data.orders;
    // Pass data to the page via props
    return { props: { orders } }
  } catch (err) {
    return { redirect: { destination: '/', permanent: false } }
  }
}

export default function Orders(props: any) {
  const orders = props.orders

  const getDiscountPrice = (product: CartProduct) => {
    return (Math.round(product.price * (1 - (product.discount / 100)))).toFixed(2);
  }

  const getProductsPrice = (product: CartProduct) => {
    return (Math.round(product.quantity * Math.round(product.price * (1 - (product.discount / 100))))).toFixed(2);
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <main className="container">
        <h1>Orders</h1>

        <div className="card">
          <Accordion multiple activeIndex={[0]}>
            {orders.map(order => (
              <AccordionTab key={order.id} header={`${order.user}  -  ${order.created_at}`}>
                <table className="table table-striped">
                  <tr>
                    <th>#</th>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Before Discount</th>
                    <th>Discount</th>
                    <th>After Discount</th>
                    <th>Price</th>
                  </tr>

                  {order['orderItems'].map(item => {
                    const discountPrice = getDiscountPrice(item)
                    const productsPrice = getProductsPrice(item)
                    return (
                      <tr key={item.id}>
                        <td></td>
                        <td>{item['title']}</td>
                        <td>{item['quantity']}</td>
                        <td>{item['price'] + ' €'}</td>
                        <td>{item['discount']}%</td>
                        <td>{discountPrice + ' €'}</td>
                        <td>{productsPrice + ' €'}</td>
                      </tr>
                    )
                  })}

                  <tr>
                    <td colSpan={6}>Total Price</td>
                    <td>{order['order'].total / 100 + ' €'}</td>
                  </tr>
                </table>
              </AccordionTab>
            ))}
          </Accordion>
        </div>
      </main>
    </div>
  )
}
