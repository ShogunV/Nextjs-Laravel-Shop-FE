import Head from 'next/head'
import Link from 'next/link'
import { logOut, useIsLoggedIn } from '../helpers/auth'
import api from '../helpers/api'
import { GetServerSideProps } from 'next'
import React from 'react'
import { useCartContext, useGetTotalPrice } from '../context/cart'
import router from 'next/router'
import { CartProduct } from '../types'

type Product = {
  id: number;
  title: string;
  description: string;
  image: string;
  price: number;
  discount: number;
}

// This gets called on every request
export const getServerSideProps: GetServerSideProps = async () => {
  // Fetch data from external API
  const res = await api.get('/products')

  const products = res.data.products;

  // Pass data to the page via props
  return { props: { products } }
}

export default function Cart() {
  const isLoggedIn: boolean = useIsLoggedIn();
  const { cart, addToCart, removeOneFromCart, removeFromCart, clearCart } = useCartContext()
  const totalPrice = useGetTotalPrice()

  const getDiscountPrice = (product: CartProduct) => {
    return (Math.round(product.price * (1 - (product.discount / 100)))/100).toFixed(2);
  }

  const getProductsPrice = (product: CartProduct) => {
    return (Math.round(product.quantity * Math.round(product.price * (1 - (product.discount / 100))))/100).toFixed(2);
  }

  const handleLogOut = () => {
    api.post('logout').then(res => logOut())
  }

  const handleCheckout = () => {
    return api.post('checkout-session', {total:totalPrice}).then(res => {
      router.push(res.data['url'])
    }).catch(e => console.log(e))
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header>
        <Link href="/login">Login</Link>
        <Link href="/register">Register</Link>
        {isLoggedIn &&
          <button onClick={handleLogOut}>Log out</button>
        }
      </header>

      <main className="container">
        <h1>Cart</h1>

        {cart.length > 0 ?
          <>
            <div>
              <h4 className="text-center">Cart
                <button className="btn btn-sm btn-danger pull-right clearCart" onClick={clearCart}><i className="fa fa-trash-o" aria-hidden="true"></i>Clear cart</button>
              </h4>
            </div>
            <table className="table table-striped">
              <thead>
                <tr>
                  <th scope="col">#</th>
                  <th scope="col">Product</th>
                  <th scope="col">Quantity</th>
                  <th scope="col">Before Discount</th>
                  <th scope="col">Discount</th>
                  <th scope="col">After Discount</th>
                  <th scope="col">Price</th>
                </tr>
              </thead>

              <tbody>

                {cart.map((product: CartProduct) => {
                  const discountPrice = getDiscountPrice(product)
                  const productsPrice = getProductsPrice(product)
                  return (
                    <tr key={product.id}>
                      <th scope="row">#</th>
                      <td>{product.title}</td>
                      <td>
                        <button className="btn btn-xs btn-outline-secondary" onClick={() => addToCart(product)}>+</button>
                        {product.quantity}
                        <button className="btn btn-xs btn-outline-secondary" onClick={() => removeOneFromCart(product)}>-</button>
                        <button className="btn btn-xs btn-danger" onClick={() => removeFromCart(product)}><i className="fa fa-trash-o" aria-hidden="true"></i></button>
                      </td >
                      <td>{(product.price / 100).toFixed(2)}</td>
                      <td>{product.discount} %</td>
                      <td>{`${discountPrice} €`}</td>
                      <td>{`${productsPrice} €`}</td>
                    </tr >
                  )
                })}

                <tr>
                  <td colSpan="6">Total Price</td>
                  <td>{`${totalPrice} €`}</td>
                </tr>
              </tbody>


            </table >

            <button className="btn btn-lg btn-success pull-right" onClick={() => handleCheckout()} > Checkout</button >

            <form action="http://localhost:8000/api/checkout-session" method="POST">
              <button type="submit">
                Checkout
              </button>
            </form>

            <Link href="/">Back</Link>
          </>
          :

          <div className="row">
            <h4 className="d-flex justify-content-center mt-5">There are no products</h4>
            <Link href="/">Back</Link>
          </div>
        }
      </main >
    </div >
  )
}
